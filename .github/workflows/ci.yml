# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: CI

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  build:
    name: Maven build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Maven build
      run: mvn -B package --file pom.xml
      env:
        PMAPI_GOOGLE_API_KEY: ${{ secrets.PMAPI_GOOGLE_API_KEY }}
    - name: CodeCov report deploy
      run: bash <(curl -s https://codecov.io/bash)
    - name: Prepare environment
      run: |
        sudo apt-get install --yes --no-install-recommends libxml-xpath-perl
        export ARTIFACT_ID=$(xpath -q -e "/project/artifactId/text()" pom.xml)
        echo "::set-env name=ARTIFACT_ID::${ARTIFACT_ID}"
        export VERSION=$(xpath -q -e "/project/version/text()" pom.xml)
        export VERSION=${VERSION//-SNAPSHOT}-$(git rev-parse --short ${GITHUB_SHA})
        echo "::set-env name=VERSION::${VERSION}"
    - name: GH Packages deploy
      uses: actions/upload-artifact@v1
      with:
        name: target
        path: target
    - name: Docker build and push
      run: |
        echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY_OWNER} --password-stdin
        docker build -t docker.pkg.github.com/chillibits/particulate-matter-api/${ARTIFACT_ID}:${VERSION} -t docker.pkg.github.com/chillibits/particulate-matter-api/${ARTIFACT_ID}:latest .
        docker push docker.pkg.github.com/chillibits/particulate-matter-api/${ARTIFACT_ID}:${VERSION}
        docker push docker.pkg.github.com/chillibits/particulate-matter-api/${ARTIFACT_ID}:latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PMAPI_GOOGLE_API_KEY: ${{ secrets.PMAPI_GOOGLE_API_KEY }}
#  deploy:
#    name: Docker deploy
#    runs-on: ubuntu-latest
#    needs: [build]
#    steps:
#      - uses: actions/checkout@v2
#      - name: Docker LogIn
#        env:
#          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          DOCKER_PW: ${{ secrets.DOCKER_PASSWORD }}
#        run: docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PW"
#      - name: Decrypt large secret
#        run: |
#          chmod +x ./.github/scripts/decrypt_secret.sh
#          ./.github/scripts/decrypt_secret.sh
#        env:
#          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
#      - name: Docker Build
#        run: docker build . -t "chillibits/pmapi"
#      - name: Push to registry
#        run: docker push "chillibits/pmapi"